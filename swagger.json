{
  "openapi": "3.0.1",
  "info": {
    "version": "1.0.1",
    "title": "swagger-money",
    "description": "Showing swagger-ui-express",
    "licence": { "name": "GoIt", "URL": "GOIT.com" }
  },
  "consumes": ["application/json"],
  "produces": ["application/json"],
  "servers": [
    { "url": "https://teamproj-money-tracker.herokuapp.com" },
    { "url": "http://localhost:8787/api" }
  ],
  "tags": [
    { "name": "Auth", "description": "Authorization endpoints" },
    { "name": "Users", "description": "Users endpoints" },
    { "name": "Transactions", "description": "Transactions endpoints" }
  ],
  "paths": {
    "auth/signup": {
      "post": {
        "tags": ["Auth"],
        "summary": "User registration",
        "parameters": [],
        "requestBody": {
          "description": "Registration's object",
          "required": "true",
          "content": {
            "applcation/json": {
              "schema": {
                "$ref": "#/components/schemas/RegistrationRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful operation",
            "content": {
              "applcation/json": {
                "schema": { "$ref": "#/components/schemas/RegistrationRsponse" }
              }
            }
          },
          "409": {
            "description": "Provided email already in base",
            "content": {}
          },
          "400": { "description": "Bad request", "conten": {} }
        }
      }
    },
    "auth/signin": {
      "post": {
        "tags": ["Auth"],
        "summary": "User authorization",
        "parameters": [],
        "requestBody": {
          "description": "Authorization's object",
          "required": "true",
          "content": {
            "applcation/json": {
              "schema": {
                "$ref": "#/components/schemas/AuthorizationRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "applcation/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthorizationRsponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {}
          },
          "400": { "description": "Bad request", "conten": {} }
        }
      }
    },
    "auth/logout": {
      "get": {
        "tags": ["Auth"],
        "summary": "User logout",
        "parameters": [],
        "security": [{ "Bearer": [] }],
        "responses": {
          "204": {
            "description": "Successful operation",
            "content": {}
          },
          "401": {
            "description": "Unauthorized",
            "content": {}
          },
          "400": { "description": "Bad request", "conten": {} }
        }
      }
    },
    "users/current": {
      "get": {
        "tags": ["Users"],
        "summary": "User information",
        "parameters": [],
        "security": [{ "Bearer": [] }],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "applcation/json": {
                "schema": { "$ref": "#/components/schemas/CurrentUserResponse" }
              }
            }
          },
          "400": { "description": "Bad request", "conten": {} }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "RegistrationRequest": {
        "type": "object",
        "required": ["email", "password"],
        "properties": {
          "email": {
            "type": "string",
            "description": "User's email",
            "format": "email"
          },
          "password": {
            "type": "string",
            "description": "User's password",
            "example": "123456"
          }
        }
      },
      "RegistrationResponse": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "description": "User's email",
            "format": "email"
          },
          "avatarURL": {
            "type": "string",
            "description": "User's avatar"
          }
        }
      },
      "AuthorizationRequest": {
        "type": "object",
        "required": ["email", "password"],
        "properties": {
          "email": {
            "type": "string",
            "description": "User's email",
            "format": "email"
          },
          "password": {
            "type": "string",
            "description": "User's password",
            "example": "123456"
          }
        }
      },
      "AuthorizationResponse": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "description": "User's email",
            "format": "email"
          },
          "token": { "type": "string", "description": "User's token" },
          "balance": { "type": "integer", "description": "User's balance" },
          "avatarURL": {
            "type": "string",
            "description": "User's avatar"
          }
        }
      },
      "CurrentUserResponse": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "description": "User's email",
            "format": "email"
          },
          "token": { "type": "string", "description": "User's token" },
          "balance": { "type": "integer", "description": "User's balance" },
          "avatarURL": {
            "type": "string",
            "description": "User's avatar"
          }
        }
      }
    },
    "securitySchemes": {
      "Bearer": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  }
}
